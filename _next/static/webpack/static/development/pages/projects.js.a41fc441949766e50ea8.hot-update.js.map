{"version":3,"file":"static/webpack/static\\development\\pages\\projects.js.a41fc441949766e50ea8.hot-update.js","sources":["webpack:///./pages/projects/index.js"],"sourcesContent":["import Link from 'next/link'\nimport css from './index.sass'\nimport Projects from '../../projects.js'\n\nexport default class extends React.Component {\n    componentDidMount () {\n        const elements = document.querySelectorAll(`.${css.screenshots}`)\n        \n        for (const screenshots of elements) \n            screenshots.scrollInterval = setInterval( \n                () => this.scrollScreenshots(screenshots),\n                16.6\n            )\n    }\n\n    scrollScreenshots (screenshots) {\n        let { style: { top }, clientHeight } = screenshots.children[0]\n\n        top = parseInt(top || 0) - 1\n\n        if ( top * -1 >= clientHeight/2 ) top = 0\n\n        screenshots.children[0].style.top = top + 'px'\n    }\n\n    getProjects () {\n        const projects = []\n\n        for (const project of Projects) {\n            const handles = []\n\n            const Screenshot = (props) => (\n                <div \n                    key={ props.key } \n                    className={ css.screenshot } \n                    style={{\n                        backgroundImage: `\n                            url(/static/projects/${project.id}/screenshots/${props.screenshot}.png)\n                        `\n                    }} \n                />\n            )\n\n            if (project.handles) \n                for (const handle of project.handles)\n                    handles.push(\n                        <a\n                            key={ handle.value }\n                            type={ handle.type }\n                            target=\"_blank\"\n                            className={ css.handle }\n                            href={ {\n                                twitter: \"https://twitter.com/@\",\n                                instagram: \"https://www.instagram.com/\",\n                                gamejolt: \"https://gamejolt.com/@\",\n                            }[handle.type] + handle.value }\n                        >\n                            @{ handle.value }\n                        </a>\n                    )        \n\n            projects.push(\n                <div \n                    key={ project.id } \n                    className={ `${css.project}` } \n                    style={{\n                        backgroundImage: `url(/static/projects/${project.id}/${project.id}.png)`\n                    }}\n                >\n                    <div>\n                        <div className={ css.info }>\n                            <div>\n                                <h2 className={ css.title }>{ project.title }</h2>\n                                { \n                                    project.links.map( link => \n                                        <a \n                                            key={ link.url } \n                                            type={ link.type } \n                                            target=\"_blank\" \n                                            className={ css.link } \n                                            href={ link.url } \n                                            style={{\n                                                backgroundImage: `\n                                                    url(/static/icons/${link.type}_circle.svg)\n                                                `\n                                            }} \n                                        />\n                                    )\n                                }\n                            </div>\n\n                            <p className={ css.description }>{ project.description }</p>\n                        </div>\n\n                        <div className={ css.screenshots }>\n                            <div>\n                                {\n                                    project.screenshots.map( screenshot => \n                                        <Screenshot \n                                            screenshot={ screenshot } \n                                            key={ screenshot } \n                                        /> \n                                    )\n                                } {\n                                    project.screenshots.map( screenshot => \n                                        <Screenshot \n                                            screenshot={ screenshot } \n                                            key={ screenshot + '0' } \n                                        /> \n                                    )\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n\n        return projects\n    }\n\n    render () {\n        return (\n            <div className={ css.projects }>\n                { this.getProjects() }\n            </div>\n        )\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AACA;AAAA;AALA;AACA;AAEA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;AAEA;AAAA;AAAA;AAAA;AAGA;AAEA;AAEA;AACA;;;AAEA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAiBA;AAEA;AACA;AACA;AACA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AA/EA;AACA;AAEA;AAAA;AAwFA;AA3FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA4FA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA3HA;AACA;;;;;A","sourceRoot":""}