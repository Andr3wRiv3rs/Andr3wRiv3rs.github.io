{"version":3,"file":"static/webpack/static\\development\\pages\\projects.js.b18adde04f9a1cb01e56.hot-update.js","sources":["webpack:///./pages/projects/index.js"],"sourcesContent":["import Link from 'next/link'\nimport css from './index.sass'\nimport Projects from '../../projects.js'\n\n\nconst Screenshots = (props) => (\n    props.project.screenshots ? props.project.screenshots.map( screenshot => \n        <div \n            key={ screenshot + props.key || '' } \n            className={ css.screenshot } \n            style={{\n                backgroundImage: `\n                    url(/static/projects/${props.project.id}/screenshots/${props.screenshot}.png)\n                `\n            }} \n        />\n    ) : ''\n)   \n\nconst Links = (props) => (\n    props.project.links ? props.project.links.map( link => \n        <a \n            key={ link.url } \n            type={ link.type } \n            target=\"_blank\" \n            className={ css.link } \n            href={ link.url } \n            style={{\n                backgroundImage: `\n                    url(/static/icons/${link.type}_circle.svg)\n                `\n            }} \n        />\n    ) : ''\n)\n\nconst Handles = (props) => (\n    props.project.handles ? props.project.handles.map( handle => \n        <a\n            key={ handle.value }\n            type={ handle.type }\n            target=\"_blank\"\n            className={ css.handle }\n            href={ {\n                twitter: \"https://twitter.com/@\",\n                instagram: \"https://www.instagram.com/\",\n                gamejolt: \"https://gamejolt.com/@\",\n            }[handle.type] + handle.value }\n        >\n            @{ handle.value }\n        </a>\n    ) : ''\n)\n\nexport default class extends React.Component {\n    componentDidMount () {\n        const elements = document.querySelectorAll(`.${css.screenshots}`)\n        \n        for (const screenshots of elements) \n            screenshots.scrollInterval = setInterval( \n                () => this.scrollScreenshots(screenshots),\n                16.6\n            )\n    }\n\n    scrollScreenshots (screenshots) {\n        let { style: { top }, clientHeight } = screenshots.children[0]\n\n        top = parseInt(top || 0) - 1\n\n        if ( top * -1 >= clientHeight/2 ) top = 0\n\n        screenshots.children[0].style.top = top + 'px'\n    }\n\n    render () {\n        return (\n            <div className={ css.projects }>\n                {\n                    Projects.map( project =>\n                        <div \n                            key={ project.id } \n                            className={ `${css.project}` } \n                            style={{\n                                backgroundImage: `url(/static/projects/${project.id}/${project.id}.png)`\n                            }}\n                        >\n                            <div>\n                                <div className={ css.info }>\n                                    <div>\n                                        <h2 className={ css.title }>{ project.title }</h2>\n                                        { <Links project={ project } />}\n                                    </div>\n\n                                    <div>\n                                        { <Handles project={ project } />}\n                                    </div>\n\n                                    <p className={ css.description }>{ project.description }</p>\n                                </div>\n\n                                <div className={ css.screenshots }>\n                                    <div>\n                                        {\n                                            <Screenshots\n                                                project={ project }\n                                            /> \n                                        } {\n                                            <Screenshots \n                                                project={ project }\n                                                key={ '0' } \n                                            /> \n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        </div>    \n                    )\n                }\n            </div>\n        )\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AACA;AAaA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AACA;AAgBA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AACA;;;;;;;;;;;;;;AAkBA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AACA;AAAA;AALA;AACA;AAEA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;AAEA;AAAA;AAAA;AAAA;AAGA;AAEA;AAEA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7BA;AA0CA;;;;AAnEA;AACA;;;;;A","sourceRoot":""}