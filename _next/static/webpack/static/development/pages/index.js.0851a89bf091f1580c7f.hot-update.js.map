{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.0851a89bf091f1580c7f.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import css from \"./index.sass\"\nimport Link from 'next/link'\n\nimport {\n    Scene, WebGLRenderer, HemisphereLight, DirectionalLight, AmbientLight, PointLight, \n    Mesh, MeshBasicMaterial, MeshStandardMaterial, PerspectiveCamera, PlaneBufferGeometry, Clock,\n    Vector2\n} from 'three'\n\nimport {\n    EffectComposer, EffectPass, RenderPass, BlendFunction, \n    ScanlineEffect, NoiseEffect, ChromaticAberrationEffect\n} from 'postprocessing'\n\nimport FBXLoader from 'three-fbxloader-offical'\n\nexport default class extends React.Component {\n    async componentDidMount () {\n        const container = document.querySelector(`.${css.background}`)\n\n        const fbx = new FBXLoader()\n\n        const scene = new Scene()\n        const composer = new EffectComposer(new WebGLRenderer({\n            logarithmicDepthBuffer: true,\n            antialias: true\n        }))\n        const camera = new PerspectiveCamera( 50, container.offsetWidth / container.offsetHeight, 0.1, 1000 )\n\n        const hemisphere = new HemisphereLight( 0xd9efff, 0x313131, 0.8 )\n        const sun = new DirectionalLight( 0xE0D5FF, 1 )\n        const ambient = new AmbientLight( 0x303030 )\n        const pointlight = new PointLight( 0xffffff, 0.4, 100)\n        const pointlightBack = new PointLight( 0xffffff, 0.3, 100)\n\n        const plane = new Mesh( \n            new PlaneBufferGeometry( 40, 40, 40, 40 ), \n            new MeshBasicMaterial({ color: 0x373737 })\n        )\n\n        const apple = await new Promise ( \n            resolve => fbx.load( 'static/apple.fbx', resolve )\n        )\n\n        apple.traverse( child => {\n            if (!child.material) return\n\n            child.material = new MeshStandardMaterial({ \n                color: {\n                    \"Pink\": 0xfe567f, \"Stem\": 0x72624a,\n                    \"Leaf\": 0x65fe82, \"Blue\": 0x80d1fe\n                } [child.name],\n\n                roughness: 1\n            })\n        })\n\n        composer.setSize( container.offsetWidth*2, container.offsetHeight*2 )\n        composer.renderer.setSize( container.offsetWidth, container.offsetHeight )\n\n        camera.position.z = 6\n        camera.position.y = 0.1\n\n        apple.scale.set( 0.01, 0.01, 0.01 )\n        apple.rotation.set( 0.5, -0.5, 0 )\n\n        sun.position.set( 0, 0.5, 4 )\n        plane.position.set( 0, 0, -4 )\n        pointlight.position.set( -4, 0, 12 )\n        pointlightBack.position.set( 3, 3, 2 )\n        apple.position.set( 0, -0.7, 0 )\n\n        sun.castShadow = true\n\n        scene.add( ambient, hemisphere, sun, pointlight, pointlightBack, apple, plane )\n\n\t\tconst scanlineEffect = new ScanlineEffect({\n\t\t\tblendFunction: BlendFunction.ALPHA,\n            density: 1.3\n        })\n\n\t\tconst noiseEffect = new NoiseEffect({ \n            blendFunction: BlendFunction.COLOR_DODGE \n        })\n\n        const chromaticAberrationEffect = new ChromaticAberrationEffect({\n            offset: new Vector2(0, 0)\n        })\n\n        window.addEventListener('mousemove', event => {\n            const { clientX, clientY } = event\n            \n            chromaticAberrationEffect.offset.x = (clientX - (window.innerWidth/2)) * -0.000018\n            \n            chromaticAberrationEffect.offset.y = (clientY - (window.innerHeight/2)) * -0.000022\n        })\n\n        scanlineEffect.blendMode.opacity.value = 0.02\n        noiseEffect.blendMode.opacity.value = 0.08\n\n        const effectPass = new EffectPass( camera, scanlineEffect, noiseEffect, chromaticAberrationEffect )\n        effectPass.renderToScreen = true\n\n        composer.addPass(new RenderPass(scene, camera))\n        composer.addPass(effectPass)\n\n        const clock = new Clock()\n\n        const animate = () => {\n            requestAnimationFrame( animate )\n            composer.render( clock.getDelta() )\n        }\n\n        animate()\n\n        setInterval( () => apple.rotation.y += 0.01, 20 )\n\n        document.querySelector(`.${css.background}`).appendChild(composer.renderer.domElement)\n    }\n    \n    nav () {\n        const html = []\n\n        for (const i of [\n            'Projects',\n            'Contact',\n            'Social',\n        ]) html.push(\n            <Link key={i} href={ '/' + i.toLowerCase() }>\n                <div>\n                    <h3>{ i }</h3><img src={ `/static/icons/${i.toLowerCase()}.svg`}/>\n                </div>\n            </Link>\n        )\n\n        return <div className={ css.navigation }>{ html }</div>\n    }\n\n    render () {\n        return (\n            <div className={ css.home }>\n                <div className={ css.background }></div>\n                <h1>Andres<br/>Sweeney-<br/>Rios</h1>\n                { this.nav() }\n                <div className={ css.powered_by }>\n                    <img src=\"/static/icons/nextjs.svg\" />\n                    <img src=\"/static/icons/threejs.svg\" />\n                </div>\n            </div>\n        )\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAMA;AAKA;AACA;;;;;;;;;;;;;;;;;;;;;;;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;;AAGA;AACA;AAAA;AACA;;AAFA;AAIA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAFA;AAKA;AANA;AAQA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AADA;AAIA;AACA;AADA;AAIA;AAAA;AAAA;AAGA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAtIA;AACA;;;;;A","sourceRoot":""}