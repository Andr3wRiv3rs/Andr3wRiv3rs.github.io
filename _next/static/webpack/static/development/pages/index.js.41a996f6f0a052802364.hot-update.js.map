{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.41a996f6f0a052802364.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import css from \"./index.sass\"\nimport Link from 'next/link'\n\nimport {\n    Scene, WebGLRenderer, HemisphereLight, DirectionalLight, AmbientLight, PointLight, \n    Mesh, MeshBasicMaterial, MeshStandardMaterial, PerspectiveCamera, PlaneBufferGeometry, Clock,\n    Vector2\n} from 'three'\n\nimport {\n    EffectComposer, EffectPass, RenderPass, BlendFunction, \n    ScanlineEffect, NoiseEffect, ChromaticAberrationEffect\n} from 'postprocessing'\n\nimport FBXLoader from 'three-fbxloader-offical'\n\nexport default class extends React.Component {\n    async componentDidMount () {\n        const container = document.querySelector(`.${css.background}`)\n\n        const fbx = new FBXLoader()\n\n        const scene = new Scene()\n        const composer = new EffectComposer(new WebGLRenderer({\n            logarithmicDepthBuffer: true,\n            antialias: true\n        }))\n        const camera = new PerspectiveCamera( 50, container.offsetWidth / container.offsetHeight, 0.1, 1000 )\n\n        const hemisphere = new HemisphereLight( 0xd9efff, 0x313131, 0.8 )\n        const sun = new DirectionalLight( 0xE0D5FF, 1 )\n        const ambient = new AmbientLight( 0x303030 )\n        const pointlight = new PointLight( 0xffffff, 0.4, 100)\n        const pointlightBack = new PointLight( 0xffffff, 0.3, 100)\n\n        const plane = new Mesh( \n            new PlaneBufferGeometry( 40, 40, 40, 40 ), \n            new MeshBasicMaterial({ color: 0x373737 })\n        )\n\n        const apple = await new Promise ( \n            resolve => fbx.load( 'static/apple.fbx', resolve )\n        )\n\n        apple.traverse( child => {\n            if (!child.material) return\n\n            child.material = new MeshStandardMaterial({ \n                color: {\n                    \"Pink\": 0xfe567f, \"Stem\": 0x72624a,\n                    \"Leaf\": 0x65fe82, \"Blue\": 0x80d1fe\n                } [child.name],\n\n                roughness: 1\n            })\n        })\n\n        composer.setSize( container.offsetWidth*2, container.offsetHeight*2 )\n        composer.renderer.setSize( container.offsetWidth, container.offsetHeight )\n\n        camera.position.z = 6\n        camera.position.y = 0.1\n\n        apple.scale.set( 0.01, 0.01, 0.01 )\n        apple.rotation.set( 0.5, -0.5, 0 )\n\n        if (window.innerWidth < 800) {\n            apple.scale.set( 0.007, 0.007, 0.007)\n            camera.position.y = -0.4\n        }\n\n        sun.position.set( 0, 0.5, 4 )\n        plane.position.set( 0, 0, -4 )\n        pointlight.position.set( -4, 0, 12 )\n        pointlightBack.position.set( 3, 3, 2 )\n        apple.position.set( 0, -0.7, 0 )\n\n        sun.castShadow = true\n\n        scene.add( ambient, hemisphere, sun, pointlight, pointlightBack, apple, plane )\n\n\t\tconst scanlineEffect = new ScanlineEffect({\n\t\t\tblendFunction: BlendFunction.ALPHA,\n            density: 1.3\n        })\n\n\t\tconst noiseEffect = new NoiseEffect({ \n            blendFunction: BlendFunction.COLOR_DODGE \n        })\n\n        const chromaticAberrationEffect = new ChromaticAberrationEffect({\n            offset: new Vector2(0, 0)\n        })\n\n        // window.addEventListener('click',\n        //     () => window.onmousemove = event => {\n        //         const { clientX, clientY } = event\n                \n        //         chromaticAberrationEffect.offset.x = (clientX - (window.innerWidth/2)) * -0.000018\n                \n        //         chromaticAberrationEffect.offset.y = (clientY - (window.innerHeight/2)) * -0.000022\n        //     }\n        // )\n\n        camera.position.y = document.querySelector('html').scrollTop * -0.006\n\n        // window.addEventListener('scroll',\n        //     () => \n        //         camera.position.y = document.querySelector('html').scrollTop * -0.006\n        //     , \n        // false)\n\n        scanlineEffect.blendMode.opacity.value = 0.02\n        noiseEffect.blendMode.opacity.value = 0.08\n\n        const effectPass = new EffectPass( camera, scanlineEffect, noiseEffect, chromaticAberrationEffect )\n        effectPass.renderToScreen = true\n\n        composer.addPass(new RenderPass(scene, camera))\n        composer.addPass(effectPass)\n\n        const clock = new Clock()\n\n        const animate = () => {\n            requestAnimationFrame( animate )\n            composer.render( clock.getDelta() )\n        }\n\n        animate()\n\n        setInterval( () => apple.rotation.y += 0.01, 20 )\n\n        document.querySelector(`.${css.background}`).appendChild(composer.renderer.domElement)\n    }\n\n    render () {\n        return (\n            <div>\n                <div className={ css.home }>\n                    <div className={ css.background }></div>\n                    <h1>Andres<br/>Sweeney-<br/>Rios</h1>\n                    \n                    <div className={ css.navigation }>\n                        {\n                            [ 'Projects' ].map( project => \n                                <Link key={ project } href={ '/' + project.toLowerCase() }>\n                                    <div>\n                                        <h3>{ project }</h3><img src={ `/static/icons/${project.toLowerCase()}.svg`}/>\n                                    </div>\n                                </Link>\n                            )\n                        }\n\n                        <a href={ '#skills' }>\n                            <div>\n                                <h3>Skills</h3><img src={ `/static/icons/skills.svg`}/>\n                            </div>\n                        </a>\n                    </div>\n                    \n                    <div className={ css.social }>\n                        {\n                            [\n\n                                {\n                                    type: 'twitter',\n                                    url: 'https://twitter.com/@Andr3wRiv3rs'\n                                },\n\n                                {\n                                    type: 'github',\n                                    url: 'https://github.com/Andr3wRiv3rs'\n                                },\n\n                                {\n                                    type: 'gamejolt',\n                                    url: 'https://gamejolt.com/@AndrewRivers'\n                                },\n\n                                {\n                                    type: 'soundcloud',\n                                    url: 'https://soundcloud.com/poison_apple'\n                                },\n                            ].map( button => \n                                <a \n                                    href={ button.url }\n                                    target=\"_blank\"\n                                >\n                                    <img type={ button.type } src={`/static/icons/${ button.type }.svg`}/>\n                                </a>\n                            )\n                        }\n                    </div>\n                    {/* <div className={ css.powered_by }>\n                        <a \n                            href=\"https://nextjs.org/\"\n                            target=\"_blank\"\n                        >\n                            <img src=\"/static/icons/nextjs.svg\" />\n                        </a>\n                        <a \n                            href=\"https://threejs.org/\"\n                            target=\"_blank\"\n                        >\n                            <img src=\"/static/icons/threejs.svg\" />\n                        </a>\n                    </div> */}\n\n                    <div className={ css.contact }>\n                        <span>\n                            andrewarivers@gmail.com<br />\n                            Poison Apple#9351\n                        </span>\n                    </div>\n                </div>\n\n                <div className={ css.skills } id=\"skills\">\n                    <div>\n                        <h3>Languages</h3>\n                        <ul>\n                            {\n                                [\n                                    'JavaScript', 'C#', 'PHP', \n                                    'Godot Script', 'Game Maker Language'\n                                ].map( lang => <li>{ lang }</li>)\n                            }\n                        </ul>\n                    </div>\n\n                    <div>\n                        <h3>Frameworks</h3>\n                        <ul>\n                            {\n                                [\n                                    'Express', 'Phonegap/Cordova', 'Vue.js', \n                                    'Nuxt.js', 'React', 'Next.js', \n                                ].map( framework => <li>{ framework }</li>)\n                            }\n                        </ul>\n                    </div>\n\n                    <div>\n                        <h3>Frontend</h3>\n                        <ul>\n                            {\n                                [\n                                    'Sass/SCSS', 'Stylus', 'three.js', 'WebRTC', \n                                    'discord.js', 'Electron', 'jQuery', 'WebExtensions'\n                                ].map( tech => <li>{ tech }</li>)\n                            }\n                        </ul>\n                    </div>\n\n                    <div>\n                        <h3>Backend</h3>\n                        <ul>\n                            {\n                                [\n                                    'Node.js', 'MongoDB', 'MySQL', 'SQLite', \n                                    'NGINX', 'Apache', 'bcrypt'\n                                ].map( tech => <li>{ tech }</li>)\n                            }\n                        </ul>\n                    </div>\n\n                    <div>\n                        <h3>CMS</h3>\n                        <ul>\n                            {\n                                [\n                                    'Wordpress'\n                                ].map( cms => <li>{ cms }</li>)\n                            }\n                        </ul>\n                    </div>\n\n                    <div>\n                        <h3>Game Engines</h3>\n                        <ul>\n                            {\n                                [\n                                    'Unity', 'Godot', 'GameMaker: Studio', 'Construct 2'\n                                ].map( engine => <li>{ engine }</li>)\n                            }\n                        </ul>\n                    </div>\n\n                    <div>\n                        <h3>Graphics</h3>\n                        <ul>\n                            {\n                                [\n                                    'Blender', 'MagicaVoxel', 'GIMP', 'Inkscape', \n                                    'Hexels', 'Aseprite', 'VoxelShop', 'Qubicle'\n                                ].map( tech => <li>{ tech }</li>)\n                            }\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAMA;AAKA;AACA;;;;;;;;;;;;;;;;;;;;;;;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;;AAGA;AACA;AAAA;AACA;;AAFA;AAIA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAFA;AAKA;AANA;AAQA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AADA;AAIA;AACA;AADA;AAKA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAMA;AACA;AAFA;AAMA;AACA;AAFA;AAMA;AACA;AAFA;AAIA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAysourceRoot":""}